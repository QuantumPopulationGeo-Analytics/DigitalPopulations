package mil.army.usace.ehlschlaeger.digitalpopulations.censusgen.fittingcriteria;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;

import mil.army.usace.ehlschlaeger.rgik.core.DataException;
import mil.army.usace.ehlschlaeger.rgik.util.ObjectUtil;



/**
 * Relative importance of traits. Part of the FittingCriteria file.
 * <P>
 * Only relevant trait IDs need be listed here. Each weight must be between 0.0
 * and 1.0, but don't need to add up to anything in particular. The attribute
 * "location" provides the weight for the traits that are auto-generated by DP.
 * Traits can be identified by id, regionTrait (if unique), or desc.
 * <p>
 * Copyright <a href="http://faculty.wiu.edu/CR-Ehlschlaeger2/">Charles R.
 * Ehlschlaeger</a>, work: 309-298-1841, fax: 309-298-3003, This software is
 * freely usable for research and educational purposes. Contact C. R.
 * Ehlschlaeger for permission for other purposes. Use of this software requires
 * appropriate citation in all published and unpublished documentation.
 * 
 * @author William R. Zwicky
 */
public class Weights {
    @XmlAttribute(name = "location")
    public double            locationWeight = 1.0;

    @XmlElement(name = "trait")
    public List<TraitWeight> weights = new ArrayList<TraitWeight>();

    /**
     * Create blank instance.
     */
    public Weights() {
    }
    
    /**
     * Perform some simple validation.
     */
    public void validate() {
        ArrayList<String> errs = new ArrayList<String>();

        if(locationWeight <= 0)
            errs.add("locationWeight must be greater than 0: "+locationWeight);
        
        for (TraitWeight weight : weights) {
            try {
                weight.validate();
            } catch (Exception e) {
                errs.add(e.getMessage());
            }
        }

        if(!errs.isEmpty())
            throw new DataException(ObjectUtil.join(errs, "\n  "));
    }
}
