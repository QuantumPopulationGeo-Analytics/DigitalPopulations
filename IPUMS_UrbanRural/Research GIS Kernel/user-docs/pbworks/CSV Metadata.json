/*-secure-
{"_perm_cache_times":{"pagetime":1336807145,"foldertime":1273260772,"permtime":1296499724},"_valid_as_of":1336807310,"author":{"perm":"admin","name":"William R. Zwicky","first_name":"William R.","last_name":"Zwicky","email":"wrzwicky@pobox.com","image":"http:\/\/files.pbworks.com\/userimage\/e27cda3470cb4359f5676dc94a968d8048d1ef28\/yes\/48x48\/1278122855","lastview":1336806900,"lastviewtext":"6 minutes","is_verified":true,"uid":"bed028d9953d4e1825545766a1ac21c043a9537a"},"current_revision":1314789618,"hasPlugins":false,"has_custom_perms":false,"hidden":false,"html":"<p>CSV tables by default have no metadata, so we've defined a special marker that can be used to identify metadata rows in the table. \"Metadata\" is data that describes the data, i.e. data that is not specific to any particular field, but rather describes the column as a whole.&nbsp; Common metadata are column data types, descriptive titles, help text, etc. The exact meaning of the metadata is application-dependent.<\/p>\n<p>&nbsp;<\/p>\n<p>A metadata row is a normal table row where the first column flags the row as metadata. The text in the first column must have the form \"##word\" or \"##word data\".&nbsp; \"Word\" provides a name for the metadata in this row, and \"data\" provides the metadata value for the first column of the table.&nbsp; Each additional field provides the metadata for the corresponding column.&nbsp; Fields can be empty.<\/p>\n<p>&nbsp;<\/p>\n<p>Metadata is accessed in the Velocity script via the \"word\" along with the desired column name or number.&nbsp; The metadata system adds a new variable to the template context named \"metadata\", and $metadata works much like $point.<\/p>\n<ul><li>Access a metadata field with <span style=\"font-family:'Courier New';\">$metadata.column.word<\/span>, where \"column\" identifies a column just like it does for $point (i.e. .clean_column or [\"column name\"] or .get(\"column name\") or [number]).&nbsp; \"word\" identifies the metadata row of interest with the same syntax [i.e. .clean_word or [\"word\"] or .get(\"word\")].&nbsp; So a field can be access simply as <span style=\"font-family:'Courier New';\">$metadata.Easting.type<\/span>, or verbosely as <span style=\"font-family:'Courier New';\">$metadata.get(\"Easting\").get(\"type\")<\/span>.<\/li>\n<li>The $metadata object always exists, but $metadata[column] or $metadata[column][word] may be null.&nbsp; Use this syntax to test for the existence of a field:<br \/><span style=\"font-family:'Courier New';\">#if($metadata[column] &amp;&amp; $metadata[column].word &amp;&amp; $metadata[column].word != \"\")<\/span><\/li>\n<li>Csv2Kml provides a few metadata rows by default, generated from the structure of the CSV input file:&nbsp;<\/li>\n<ul><li>csvIndex contains the column number starting from zero.<\/li>\n<li>csvTitle contains the original name of column from the first row of the CSV file.<\/li>\n<li>csvField contains the \"clean\" form of column name.<\/li>\n<\/ul><\/ul><p>&nbsp;<\/p>\n<p>Some examples:<\/p>\n<table style=\"width:100%;\" border=\"0\"><tbody><tr><td>\n<ul><li>$metadata[4].csvIndex == 4<\/li>\n<li><span style=\"font-family:'Courier New';\">$metadata.county_name.csvField<\/span> == \"county_name\"<\/li>\n<li><span style=\"font-family:'Courier New';\">$metadata[\"county name\"].csvTitle<\/span> == \"county name\"<\/li>\n<li><span style=\"font-family:'Courier New';\">$metadata[$metadata[4].csvTitle].csvIndex<\/span> == 4<\/li>\n<\/ul><\/td>\n<\/tr><\/tbody><\/table><p>&nbsp;<\/p>\n<hr \/><p>&nbsp;<\/p>\n<p>Here is a simple example table with metadata:<\/p>\n<table style=\"width:100%;\" border=\"0\"><tbody><tr><td>\n<p><span style=\"font-family:'Courier New';\">&nbsp; Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Easting Northing Size Age Color<\/span><br \/><span style=\"font-family:'Courier New';\">&nbsp; ##type string double&nbsp; double&nbsp;&nbsp; int&nbsp; int string<\/span><br \/><span style=\"font-family:'Courier New';\">&nbsp; Bill&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 45&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 12&nbsp; 90&nbsp; blonde<\/span><br \/><span style=\"font-family:'Courier New';\">&nbsp; Willhelm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 37&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp; 72&nbsp; alabaster<\/span><br \/><span style=\"font-family:'Courier New';\">&nbsp; Billiard&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 89&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; 3&nbsp; ivory<\/span><\/p>\n<p>&nbsp;<\/p>\n<p>Data column 1 will contain {45, 37, 18}, while metadata column 1 contains \"double\", which can be used to define the type of structure that should hold the data. The metadata field can be accessed as metadata.get(1).get(\"type\") or metadata.get(\"Easting\").get(\"type\").<\/p>\n<\/td>\n<\/tr><\/tbody><\/table><p>&nbsp;<\/p>","locked":false,"mtime":1314789618,"name":"CSV Metadata","oid":44926561,"perms":{"r":true},"revcount":2,"revurl":"http:\/\/digitalpopulations.pbworks.com\/w\/page\/44926561\/CSV%20Metadata","size":4424,"wikistyle":false}
*/
